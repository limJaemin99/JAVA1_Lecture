<day 01>
# JAVA
객체 지향 언어
> 프로그래밍 언어 + 객체지향 개념

# 컴파일
고급언어(사람의 언어)를 기계어(컴퓨터 언어)로 바꿔주는 작업

# 컴파일러
컴파일을 해주는 프로그램 또는 명령어

# 콘솔
사용자와 운영체제가 소통한 결과를 나타내는 창

----------------------------------------------------------------------------
# 자바 프로그램 실행
	JAVA 프로그램
		▼
	JVM(Java Virtual Machine=자바 가상 운영체제)
		▼
	운영체제(OS)
		▼
	컴퓨터(하드웨어)

JAVA는 JVM과 소통하는 언어이기 때문에 운영체제가 바뀌어도 소통이 가능하다.
따라서 운영체제와 독립적이고 이식성이 좋다.

# JVM(Java Virtual Machine)
자바 가상 운영체제
자바 프로그램을 실행 해 준다.


# JRE(Java Runtime Environment)
자바 실행 환경
JVM을 생성 해 주는 부분
JVM에서 코드를 실행 할 때 필요한 라이브러리 파일들과 기타 파일들을 가지고 있다.

# JDK(Java Development Kik)
자바 개발 도구
JAVA 프로그램을 만드는데 도와주는 역할
JRE 외에도 개발에 필요한 전반적인 도구들을 가지고 있다.

----------------------------------------------------------------------------
# JDK 8 버전 설치

- Windows, Mac jdk8 다운로드까지는 방법 동일
구글에 jdk8 download 검색 > 첫번째 링크 클릭 
	> 조금 아래로 내려서 처음나오는 부분(Java SE Develop Kit 8u202)에서 운영체제에 맞는 버전 선택	
		> 체크 후 다운로드 클릭 > 로그인
				ID : tedhan1204@gmail.com
				PW : Asdf1234!

- Windows jdk 8 설치방법
설치파일 실행 > Next > 
	jdk 설치창에서 Install to: 파일경로 \Program Files 지우기 > Next
		> jre 설치창이 뜨면 C:\Java 폴더안에 jre 폴더만들기(폴더명은 jdk 폴더명과 동일하나 jdk->jre)
			> 다음(next) > close(끝)

# 환경 변수 설정
jdk파일에서 bin폴더 경로 복사 > 제어판 > 환경변수 검색 > 시스템 환경변수(or 환경변수 편집) 클릭 >
	환경변수 > 아래쪽에 새로 만들기 클릭 > 
	변수 이름 : JAVA_HOME
	변수 값 : jdk 경로(C:\Java\jdk1.8.0_291)
		시스템 변수에서 Path 더블클릭 > 새로만들기 >
			복사한 파일경로 붙여넣기(C:\Java\jdk1.8.0_291\bin) > 위로이동 클릭(최상단으로 이동)
				> 확인x3	> 모든 창(제어판까지) 닫고 cmd 실행	
					> javac -version 명령어 실행시 버전 정보가 뜨면 설치 완료


# 통합 개발 환경 IDE: 이클립스 설치
이클립스 무설치 버전 사용
https://drive.google.com/file/d/1DtB7s_Bhy6YyLBCqZx_egrK1x2bM8uF-/view?usp=sharing

-----------------------------------------------------------------------
# 자바 프로그램의 구조

	프로젝트
		패키지
			클래스(맨 앞글자가 대문자)
				메소드(이름 뒤에 소괄호)
					소스코드

{}
	영역, 바디, 블럭
	해당하는 클래스, 메소드 등의 영역의 나타낸다.
	*현재 선언중(생성중)임을 나타낸다.
	
	class 클래스명{
		클래스의 영역
	}
----------------------------------------------------------------------
# 출력 메소드
- 출력: 사용자에게 데이터가 표현되는 것

print()	: 괄호 안에 있는 값을 그대로 출력, 마지막에 줄바꿈 x
println(): 괄호 안에 있는 값을 그대로 출력, 마지막에 줄바꿈 o
printf()

- 출력메소드의 목적
문제 발생 시 어떤 부분이 문제인지를 구체화 시킬 수 있도록 라인별로 출력하여 알아내기 위함이다.
사용자를 위한 도구가 아닌, 개발자를 위한 도구.

# 제어문자
따옴표 안에 작성하고 \ 와 함께한다.
	
	\n : Enter(줄바꿈)
	\t : Tab
	\" : "

-------------------------------------------------------------------------------
# 변수
하나의 값을 저장할 수 있는 '저장공간'
	X	=		10
저장공간의 이름	대입연산자		값(데이터)

= (대입연산자)
오른쪽에 있는 값을 왼쪽의 저장공간에 넣어라!

# 자료형
저장공간의 종류, 타입

	자료형		type	byte	예
	-------------------------------
	정수형		int	4	0, 	10, -17, ...
	실수형		float	4	0.0F, 3.14F, -17.147F, ...
			double	8	0.0, 3.14, -17.147, ...
	문자형		char	2	'H', '20', '!', '가', ...
	논리형		boolean 1bit true, false
	
	문자열		String 	???	"Hello", "0", "A", "" ...

- 변수의 선언
int x = 10;
자료형 변수명 = 초기값;	// 초기화: 변수에 처음으로 값을 저장하는것
int x;
자료형 변수명;

- 변수 선언시 주의사항
같은 이름의 변수를 선언할 수 없다.
초기화를 해준다.
되로록 선언부(메소드 상단)에 한꺼번에 선언한다.

- 변수의 사용
변수의 값이 필요한 곳에 변수명을 그대로 사용.
int data= 10;
sysout(data);
	
- 변수의 사용이유
1. 반복되는 같은 의미의 값을 쉽게 관리하기 위해서 (= 유지보수)
2. 값에 의미부여를 하기 위해서

- 변수명 주의사항
1. 숫자는 맨 앞에 쓸 수 없다. (1num)
2. 특수문자를 쓸 수 없다.
3. 공백을 쓸 수 없다. (My name) > x
4. 되도록 소문자만 사용한다.
_ (언더바)는 사용가능 한다. no_Where
카멜 표기법: noWhere
5. 되도록 한글은 사용하지 않는다.
6. 뜻이 있는 명사형 단어를 선택한다.
a,b,c,d...(x) num, height, data (o)


# 값
변수, 리터럴, 상수
데이터

------------------------------------------------------
# 아카이브 파일 import 방법
1. package explorer에서 우클릭
2. import
3. General 폴더 열기
4. Existing Projects into Workspace 클릭
5. Select Archive File 클릭
6. Browse..
7. .zip 아카이브 파일 찾아서 더블클릭
8. Finish

