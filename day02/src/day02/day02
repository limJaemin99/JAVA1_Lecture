<DAY02>
# printf("서식문자열", 값)
서식문자를 사용할 수 있는 출력 메소드

- 서식문자(format 문자): 따옴표 안에 작성하고 %와 함께한다.
%d : 정수
%f : 실수
%s : 문자열
%c : 문자

System.out.println(10.0 / 3);	//3.33333333..
> 실수의 자리수 조절불가

System.out.printf("%.2f",10.0/3)//3.33
> 출력 형식 지정가능

printf("이름: %s","이순신");	// 이름: 이순신

뒤에 올 값들은 서식문자의 개수와 타입에 맞춰서 따라와야 한다.
마지막에 줄바꿈을 하지 않기 때문에 직접 줄바꿈을 해 줘야 한다.

---------------------------------------------------------------
# 입력메소드
-입력: 사용자가 개발자에게 값을 넘겨주는 행위

- 입력 상태
커서가 깜빡이면서 값이 들어오기를 기다리는 상태
값이 입력되지 않으면 다음으로 진행이 불가하다.

-Scanner 란?
화면으로부터 데이터를 입력받는 기능을 제공하는 클래스

Scanner sc = new Scanner(System.in);

int num = sc.nextInt();
System.out.println(num);

.(하위연산자)
A.b = A안의 b, A의 b

next()
통째로가 사용자가 입력한 문자열 값
공백 또는 엔터를 구분점으로 판단하고 분리하여 입력받는다
이 예진: "이", "예진" 분리하기 때문에 "이" 만 입력받는다.
따라서 값의 개수만큼 next()를 사용 해줘야만 한다.

nextLine()
통째로가 사용자가 입력한 문자열 값
공백도 문자로 입력받는다.
앞에 nextLine()을 제외한 다른입력 있다면 의미없는 nextLine()을 하나 미리 써줘야 한다.

nextInt()
통째로가 사용자가 입력한 정수 값

------------------------------------------------------------------------------
# 형변환
- 강제 형변환
(자료형) : 형변환 연산자

(자료형)값
(double)10	//10.0

- 자동 형변환
정수 + 실수 = 실수
3 + 0.0 = 3.0
문자 + 정수 = 정수
3 + ' ' = 35
'A' + 5 = 70
정수, 실수, 문자 + 문자열 = 문자열
3 + "Hello" = "3Hello"
10 + "" = "10"
'3' + "" = "3"

-------------------------------------------------------------------------------
# 연산자
	3 * x + 5

- 연산자
연산을 수행하는 기호(+ , -, *, / 등)

- 피연산자
연산자의 연산 수행 대상

※ 모든 연산자는 연산결과를 반환한다.

- 연산자의 우선순위
하나의 식에 둘 이상의 연산자가 있을 때, 먼저 연산하는 순위를 자동결정 하는것
원하는 우선순위가 있을 경우 괄호()를 사용할 수 있지만, 매번 수동으로 하기 번거로움
2 + 6 * 7

최 단 산 관 리 삼 대
최우선 연산자
단항 연산자
산술 연산자
관계 연산자(비교연산자)
논리 연산자
삼항 연산자
대입 연산자

- 결합성
한 문장 안에 우선순위가 같은 여러개 있을 때
맞는 방향으로 결합하여 연산하는 성질

- 보통 왼쪽 > 오른쪽
1 + 2 + 3 + 4
(1+2)+3 +4
(3+3)+4
6+4
10

※예외
- 대입연산자, 단항연산자는 오른쪽 > 왼쪽
x = y = 5
x = 5
5

- 최우선 연산자
()

- 단항 연산자(피연산자가 하나)
형변환 연산자: (자료형)값

- : 피연산자의 부호를 반대로 변경
int num= -10;
num = -num;	// -(-10)
sysout(num)	//10

- 산술 연산자
+ , -, *, / (사칙연산)
% (모듈러스): a%b	// a를 b로 나눈 나머지
10 % 3	// 1

- 관계 연산자(비교연산자)
두 피연산자를 비교해서 true 또는 false 반환

> , <	: 초과, 미만
>= , <=	: 이상, 이하
==	: 같다
!=	: 다르다

x = 2 y=4
x * 2 < y * 4
4 < 16	// true

a < b
a == b
a != b

- 조건식
조건을 제시하는 식
결과가 참 또는 거짓(true, false), 둘 중 하나로 나오는 식
관계연산자를 이용해서 만들어지는 식이다.
자바에서는 0 과 1 대신 false, true 라는 값을 사용한다.

논리형 boolean true,false

- 논리 연산자
조건식을 연결할 때 사용하는 연산자

*A 와 B는 조건식 가정
A && B(AND결합) : 두 조건식의 연산결과가 둘다 true 라면 true
	둘 중에 하나라도 false 라면 false
A || B(OR결합) : 두 조건식의 연산 결과중 하나라도 true면 true

	y > 5 && y < 10
	관계연산자를 먼저 수행된 후, 논리연산자가 수행

	5 < y < 10	// 에러

- 삼항 연산자
조건식 ? 값1(참이면 오는 부분) : 값2(거짓이면 오는 부분)
조건식의 연산결과가 true라면 값1 선택
조건식의 연산결과가 false라면 값2 선택

삼항연산자는 사용부분 통째로가 하나의 값
경우의 수가 딱 두가지의 값으로 나오는 경우에 사용하는 것이 좋다.

- 대입 연산자(=)
연산이 모두 끝나야 연산결과를 저장할 수 있기 때문에 우선순위가 가장 낮다.